name: CI

on: 
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request: 
    branches:
      - '*'

jobs:

  build:
    name: Build
    runs-on: windows-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Setup Gulp
        run: npm install -g gulp-cli

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1

      - name: Restore Node Packages
        run: |
          cd src/CloudTransformerTemplate.UI
          npm install

      - name: Restore NuGet Packages
        run: nuget restore src/CloudTransformerTemplate.sln

      - name: Build UI
        run: |
          cd src/CloudTransformerTemplate.UI
          gulp
      
      - name: Build Solution
        if: github.repository == 'cloudtransformer/umbraco-template' && !(github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: msbuild.exe src/CloudTransformerTemplate.sln /t:Clean,Build /p:Configuration=Release /p:Platform="Any CPU" /p:WarningLevel=1

      - name: Build Solution & Package
        if: github.repository == 'cloudtransformer/umbraco-template' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: msbuild.exe src/CloudTransformerTemplate.sln /t:Clean,Build /p:Configuration=Release /p:Platform="Any CPU" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:WarningLevel=1

      - name: Run Unit Tests
        run: vstest.console.exe /Enablecodecoverage tests/CloudTransformerTemplate.UnitTests/bin/Release/CloudTransformerTemplate.UnitTests.dll
      
      - name: Run Integration Tests
        run: vstest.console.exe /Enablecodecoverage tests/CloudTransformerTemplate.IntegrationTests/bin/Release/CloudTransformerTemplate.IntegrationTests.dll

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        if: github.repository == 'cloudtransformer/umbraco-template' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        with:
          name: CloudTransformerTemplate.zip
          path: src/CloudTransformerTemplate/obj/Release/Package/CloudTransformerTemplate.zip

      - name: Upload Artifact Database
        uses: actions/upload-artifact@v2
        if: github.repository == 'cloudtransformer/umbraco-template' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        with:
          name: CloudTransformerTemplate.Database.zip
          path: src/CloudTransformerTemplate.Database/database.sql

  deploy:
    name: Deploy
    runs-on: windows-latest
    needs: Build
    if: success() && github.repository == 'cloudtransformer/umbraco-template' && github.ref == 'refs/heads/main'
    steps:

      - name: Checkout
        uses: actions/checkout@v2

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: Build
    if: success() && github.repository == 'cloudtransformer/umbraco-template' && startsWith(github.ref, 'refs/tags')
    steps:

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: CloudTransformerTemplate.zip

      - name: Download Artifact Database
        uses: actions/download-artifact@v2
        with:
          name: CloudTransformerTemplate.Database.zip
      
      - name: Rename Artifact
        run: mv CloudTransformerTemplate.zip CloudTransformerTemplate.${GITHUB_REF#refs/tags/}.zip
      
      - name: Rename Artifact Database
        run: mv database.sql CloudTransformerTemplate.Database.${GITHUB_REF#refs/tags/}.sql

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: |
            *.zip
            *.sql